id,
str name,
int cost,
str text,
int attack,
int health,
type,
class,
rarity

62889,"Silverleaf Poison",2,"Give your weapon\n""After your hero attacks,\ndraw a card.""",,,"SPELL","ROGUE","COMMON"



56899,"Metamorphosis",5,"Swap your Hero Power to ""Deal 4 damage."" After 2 uses, swap it back.",,,"SPELL","DEMONHUNTER","LEGENDARY"

Swap your Hero Power to ""Deal 4 damage."" After 2 uses, swap it back.
Swap your Hero Power to "Deal 4 damage

"Swap your Hero Power to ""Deal 4 damage."" After 2 uses, swap it back.",

<b>Questline:</b> Take 8\ndamage on your turns.\n<b>Reward:</b> <b>Lifesteal</b>. Deal $3\ndamage to the enemy hero.


after cost:
are there any commas in between? 
    commas appear when there are no double quotes
    commas don't appear before double quotes
    commas appear in the double quotes 
    commas appear after double quotes 

are there double quotes // to check for its existence
    are there triple quotes // it only ends in either single or triple quotes
    are there single quotes // 
        find the next comma
        find the next quote

i want to use a regular buffer for the strings, then after sanitizing the string i will then copy it to
the card's text using stringdup 

there are multiple b
nested b

b >> i 

68377,"Arcanite Reaper",5,text,attack 5,health ,"WEAPON","WARRIOR","FREE"

"<b>Hello</b>\\n I'm looking for \"\"<i>italicness!</i>\"\""

Hello
I'm looking for \"\"<i>italicness!</i>\"\""


do not sort the cards and write the cards as they are
as you write down the cards in cards.bin,
oftello will tell you the position in the file of which card is being written  
you are also creating the index structs and putting them in the indexes array 
then sort the indexes array and then write them inside the index.bin

length - so you can reallocate memory when you need before writing them down into cards.bin 

index struct
    name - name of the card
    offset 

searcher will only read the index.bin and keep an array of the indexes again 
user will input the cardname and it will look through the indexes with binary sort to make 
things faster 
you will then take the offset and then read the cards file with that